/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {



     behaviors {
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
        td: tapdance {
                compatible = "zmk,behavior-hold-tap";
                label = "TAPDANCE";
                #binding-cells = <2>;
                tapping-term-ms = <150>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
        };



        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &trans  &kp Q &kp W &kp E &kp R &kp T               &kp Y &kp U  &kp I     &kp O   &kp P             &trans
   &trans  &kp A &kp S &hm LALT D &hm LGUI F &kp G     &kp H &hm RGUI J  &hm LALT K    &kp L   &kp SEMI &trans
   &trans  &kp Z &kp X &kp C &kp V &kp B               &kp N &kp M  &kp COMMA &kp DOT &kp FSLH          &trans
   &trans                &kp SPACE &sk LSHIFT           &sk RCTRL &to 1                                 &trans
                        >;
                };

                left_layer {
                        bindings = <
   &trans  &kp ESC     &kp LS(N2)   &kp LS(N3)  &kp LS(N4) &kp LS(N5)     &kp LS(N6)   &kp LS(N7)   &kp LS(N8)   &kp MINUS  &kp BSPC  &trans
   &trans  &kp TAB     &kp LS(N1)   &trans      &trans     &kp SQT        &kp BSLH     &kp LBRC     &kp RBRC     &kp PIPE   &kp ENTER &trans
   &trans  &kp TILDE   &trans       &trans      &trans     &trans         &kp LBKT     &kp LPRN     &kp RPRN     &kp RBKT   &to 3     &trans
   &trans                                      &to 0   &sk LSHIFT         &sk RALT &to 2                           &trans
                        >;
                };

                right_layer {
                        bindings = <
   &trans  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &trans  &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &trans  &to 4   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

                tri_layer {
                        bindings = <
   &trans  &kp ESC &trans &trans &trans &trans      &trans   &trans   &trans  &trans    &kp BSPC &trans
   &trans  &kp TAB &trans &trans &trans &trans      &kp LEFT &kp DOWN &kp UP  &kp RIGHT &trans   &trans
   &trans  &trans  &trans &trans &trans &trans      &trans   &trans   &trans  &trans    &trans   &trans
   &trans                    &to 0   &sk LGUI       &sk LSHIFT   &trans                                   &trans
                        >;
                };

                bt {
                        bindings = <
   &trans  &trans  &trans &trans &trans             &trans            &trans  &trans  &trans &trans &trans &trans
   &trans  &trans  &trans &trans &trans             &trans            &trans  &trans  &trans &trans &trans &trans
   &trans  &bt BT_PRV  &bt BT_NXT &bt BT_CLR &trans &trans            &trans  &trans  &trans &trans &trans &trans
   &trans                         &to 0 &trans                        &trans &to 1                         &trans
                        >;
                };
        };
};
